rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Transactions: users can only access their own transactions
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        validateTransactionData(request.resource.data);
      
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        request.auth.uid == request.resource.data.userId &&
        validateTransactionData(request.resource.data);
    }
    
    // Categories collection (if you plan to have shared categories)
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      // Only allow admins to write categories (optional)
      allow write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Helper function to validate transaction data
    function validateTransactionData(data) {
      return data.keys().hasAll(['userId', 'type', 'category', 'amount', 'date', 'paymentMethod']) &&
        data.userId is string &&
        data.type in ['gasto', 'ingreso'] &&
        data.category is string &&
        data.amount is number &&
        data.amount > 0 &&
        data.date is string &&
        data.paymentMethod is string &&
        data.description is string &&
        (data.subcategory == null || data.subcategory is string) &&
        (data.installments == null || (data.installments is number && data.installments > 0)) &&
        (data.installmentsPaid == null || (data.installmentsPaid is number && data.installmentsPaid >= 0)) &&
        data.createdAt is timestamp &&
        (data.updatedAt == null || data.updatedAt is timestamp);
    }
  }
}